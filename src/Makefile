# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/xfmpc
pkglibdir = $(libdir)/xfmpc
pkgincludedir = $(includedir)/xfmpc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = xfmpc$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_xfmpc_OBJECTS = xfmpc-main.$(OBJEXT) xfmpc-main-window.$(OBJEXT) \
	xfmpc-interface.$(OBJEXT) xfmpc-extended-interface.$(OBJEXT) \
	xfmpc-playlist.$(OBJEXT) xfmpc-dbbrowser.$(OBJEXT) \
	xfmpc-lists.$(OBJEXT) xfmpc-streams.$(OBJEXT) \
	xfmpc-streams-dialog.$(OBJEXT) xfmpc-songinfo.$(OBJEXT) \
	xfmpc-statusbar.$(OBJEXT) xfmpc-preferences.$(OBJEXT) \
	xfmpc-preferences-dialog.$(OBJEXT) xfmpc-cover.$(OBJEXT) \
	xfmpc-mpdclient.$(OBJEXT) xfmpc-song-dialog.$(OBJEXT) \
	xfmpc-menu.$(OBJEXT) xfmpc-tray.$(OBJEXT) \
	xfmpc-lastfm.$(OBJEXT) xfmpc-etc.$(OBJEXT) \
	xfmpc-xfce-arrow-button.$(OBJEXT)
xfmpc_OBJECTS = $(am_xfmpc_OBJECTS)
xfmpc_DEPENDENCIES =
xfmpc_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(xfmpc_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(xfmpc_SOURCES)
DIST_SOURCES = $(xfmpc_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run aclocal-1.10
ALL_LINGUAS = ar ca cs da de en_GB es eu fi fr gl id it ja nl pt_BR pt sv tr uk 
AMTAR = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run autoconf
AUTOHEADER = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run autoheader
AUTOMAKE = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run automake-1.10
AWK = gawk
CATALOGS =  ar.gmo ca.gmo cs.gmo da.gmo de.gmo en_GB.gmo es.gmo eu.gmo fi.gmo fr.gmo gl.gmo id.gmo it.gmo ja.gmo nl.gmo pt_BR.gmo pt.gmo sv.gmo tr.gmo uk.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = xfmpc
GMOFILES =  ar.gmo ca.gmo cs.gmo da.gmo de.gmo en_GB.gmo es.gmo eu.gmo fi.gmo fr.gmo gl.gmo id.gmo it.gmo ja.gmo nl.gmo pt_BR.gmo pt.gmo sv.gmo tr.gmo uk.gmo
GMSGFMT = /usr/bin/gmsgfmt
GREP = /bin/grep
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GTK_REQUIRED_VERSION = 2.12.0
GTK_VERSION = 2.16.1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_KBD_RULE = %.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_POLICY_RULE = %.policy:    %.policy.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVICE_RULE = %.service: %.service.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_THEME_RULE = %.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_XAM_RULE = %.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_XML_NOMERGE_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u /tmp $< $@
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
LD = /usr/i686-pc-linux-gnu/bin/ld
LDFLAGS = 
LIBMPD_CFLAGS = -I/usr/include/libmpd-1.0/ -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
LIBMPD_LIBS = -lmpd -lglib-2.0  
LIBMPD_REQUIRED_VERSION = 0.15.0
LIBMPD_VERSION = 0.18.0
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBX11_CFLAGS = 
LIBX11_LDFLAGS = 
LIBX11_LIBS =  -lSM -lICE -lX11
LIBXFCE4UTIL_CFLAGS = -I/usr/include/xfce4 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
LIBXFCE4UTIL_LIBS = -lxfce4util -lglib-2.0  
LIBXFCE4UTIL_REQUIRED_VERSION = 4.4.0
LIBXFCE4UTIL_VERSION = 4.6.1
LIBXFCEGUI4_CFLAGS = -I/usr/include/xfce4 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/atk-1.0  
LIBXFCEGUI4_LIBS = -lxfcegui4 -lgtk-x11-2.0 -lxfce4util -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
LIBXFCEGUI4_REQUIRED_VERSION = 4.4.0
LIBXFCEGUI4_VERSION = 4.6.1
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/proton/projects/xfmpc-ng/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = xfmpc
PACKAGE_BUGREPORT = http://bugzilla.xfce.org/
PACKAGE_NAME = Xfmpc
PACKAGE_STRING = Xfmpc 0.1.0
PACKAGE_TARNAME = xfmpc
PACKAGE_VERSION = 0.1.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  ar.po ca.po cs.po da.po de.po en_GB.po es.po eu.po fi.po fr.po gl.po id.po it.po ja.po nl.po pt_BR.po pt.po sv.po tr.po uk.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_NLS = yes
VERSION = 0.1.0
XGETTEXT = /usr/bin/xgettext
XGETTEXT_ARGS = --keyword=Q_ --from-code=UTF-8
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/proton/projects/xfmpc-ng/src
abs_srcdir = /home/proton/projects/xfmpc-ng/src
abs_top_builddir = /home/proton/projects/xfmpc-ng
abs_top_srcdir = /home/proton/projects/xfmpc-ng
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/proton/projects/xfmpc-ng/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
xfmpc_SOURCES = \
	main.c								\
	main-ui.h							\
	main-window.c							\
	main-window.h							\
	interface.c							\
	interface.h							\
	extended-interface.c						\
	extended-interface.h						\
	playlist.c							\
	playlist.h							\
	dbbrowser.c							\
	dbbrowser.h							\
	lists.c							\
	lists.h							\
	streams.c							\
	streams.h							\
	streams-dialog.c					\
	streams-dialog.h					\
	songinfo.c							\
	songinfo.h							\
	statusbar.c							\
	statusbar.h							\
	preferences.c							\
	preferences.h							\
	preferences-dialog.c						\
	preferences-dialog.h						\
	cover.c							\
	cover.h							\
	mpdclient.c							\
	mpdclient.h							\
	song-dialog.c							\
	song-dialog.h							\
	menu.c							\
	menu.h							\
	tray.c							\
	tray.h							\
	lastfm.c							\
	lastfm.h							\
	etc.c							\
	etc.h							\
	xfce-arrow-button.c						\
	xfce-arrow-button.h

xfmpc_CFLAGS = \
	-I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  							\
	-I/usr/include/xfce4 -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/atk-1.0  						\
	-I/usr/include/xfce4 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  						\
	-I/usr/include/libmpd-1.0/ -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  							\
	-lnotify						\
	-DDATADIR=\"$(datadir)\"					\
	-DSRCDIR=\"$(top_srcdir)\"

xfmpc_LDADD = \
	-lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  							\
	-lxfcegui4 -lgtk-x11-2.0 -lxfce4util -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  						\
	-lxfce4util -lglib-2.0  						\
	-lmpd -lglib-2.0  

INCLUDES = \
	-I${top_srcdir}							\
	-DPACKAGE_LOCALE_DIR=\"$(localedir)\"				\
	-DLOCALEDIR=\"$(localedir)\"

#DISTCLEANFILES = \
#	main-ui.h

#BUILT_SOURCES = \
#	main-ui.h

EXTRA_DIST = \
	main-ui.xml

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
xfmpc$(EXEEXT): $(xfmpc_OBJECTS) $(xfmpc_DEPENDENCIES) 
	@rm -f xfmpc$(EXEEXT)
	$(xfmpc_LINK) $(xfmpc_OBJECTS) $(xfmpc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/xfmpc-cover.Po
include ./$(DEPDIR)/xfmpc-dbbrowser.Po
include ./$(DEPDIR)/xfmpc-etc.Po
include ./$(DEPDIR)/xfmpc-extended-interface.Po
include ./$(DEPDIR)/xfmpc-interface.Po
include ./$(DEPDIR)/xfmpc-lastfm.Po
include ./$(DEPDIR)/xfmpc-lists.Po
include ./$(DEPDIR)/xfmpc-main-window.Po
include ./$(DEPDIR)/xfmpc-main.Po
include ./$(DEPDIR)/xfmpc-menu.Po
include ./$(DEPDIR)/xfmpc-mpdclient.Po
include ./$(DEPDIR)/xfmpc-playlist.Po
include ./$(DEPDIR)/xfmpc-preferences-dialog.Po
include ./$(DEPDIR)/xfmpc-preferences.Po
include ./$(DEPDIR)/xfmpc-song-dialog.Po
include ./$(DEPDIR)/xfmpc-songinfo.Po
include ./$(DEPDIR)/xfmpc-statusbar.Po
include ./$(DEPDIR)/xfmpc-streams-dialog.Po
include ./$(DEPDIR)/xfmpc-streams.Po
include ./$(DEPDIR)/xfmpc-tray.Po
include ./$(DEPDIR)/xfmpc-xfce-arrow-button.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

xfmpc-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-main.o -MD -MP -MF $(DEPDIR)/xfmpc-main.Tpo -c -o xfmpc-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	mv -f $(DEPDIR)/xfmpc-main.Tpo $(DEPDIR)/xfmpc-main.Po
#	source='main.c' object='xfmpc-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

xfmpc-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-main.obj -MD -MP -MF $(DEPDIR)/xfmpc-main.Tpo -c -o xfmpc-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	mv -f $(DEPDIR)/xfmpc-main.Tpo $(DEPDIR)/xfmpc-main.Po
#	source='main.c' object='xfmpc-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

xfmpc-main-window.o: main-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-main-window.o -MD -MP -MF $(DEPDIR)/xfmpc-main-window.Tpo -c -o xfmpc-main-window.o `test -f 'main-window.c' || echo '$(srcdir)/'`main-window.c
	mv -f $(DEPDIR)/xfmpc-main-window.Tpo $(DEPDIR)/xfmpc-main-window.Po
#	source='main-window.c' object='xfmpc-main-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-main-window.o `test -f 'main-window.c' || echo '$(srcdir)/'`main-window.c

xfmpc-main-window.obj: main-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-main-window.obj -MD -MP -MF $(DEPDIR)/xfmpc-main-window.Tpo -c -o xfmpc-main-window.obj `if test -f 'main-window.c'; then $(CYGPATH_W) 'main-window.c'; else $(CYGPATH_W) '$(srcdir)/main-window.c'; fi`
	mv -f $(DEPDIR)/xfmpc-main-window.Tpo $(DEPDIR)/xfmpc-main-window.Po
#	source='main-window.c' object='xfmpc-main-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-main-window.obj `if test -f 'main-window.c'; then $(CYGPATH_W) 'main-window.c'; else $(CYGPATH_W) '$(srcdir)/main-window.c'; fi`

xfmpc-interface.o: interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-interface.o -MD -MP -MF $(DEPDIR)/xfmpc-interface.Tpo -c -o xfmpc-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c
	mv -f $(DEPDIR)/xfmpc-interface.Tpo $(DEPDIR)/xfmpc-interface.Po
#	source='interface.c' object='xfmpc-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

xfmpc-interface.obj: interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-interface.obj -MD -MP -MF $(DEPDIR)/xfmpc-interface.Tpo -c -o xfmpc-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`
	mv -f $(DEPDIR)/xfmpc-interface.Tpo $(DEPDIR)/xfmpc-interface.Po
#	source='interface.c' object='xfmpc-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`

xfmpc-extended-interface.o: extended-interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-extended-interface.o -MD -MP -MF $(DEPDIR)/xfmpc-extended-interface.Tpo -c -o xfmpc-extended-interface.o `test -f 'extended-interface.c' || echo '$(srcdir)/'`extended-interface.c
	mv -f $(DEPDIR)/xfmpc-extended-interface.Tpo $(DEPDIR)/xfmpc-extended-interface.Po
#	source='extended-interface.c' object='xfmpc-extended-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-extended-interface.o `test -f 'extended-interface.c' || echo '$(srcdir)/'`extended-interface.c

xfmpc-extended-interface.obj: extended-interface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-extended-interface.obj -MD -MP -MF $(DEPDIR)/xfmpc-extended-interface.Tpo -c -o xfmpc-extended-interface.obj `if test -f 'extended-interface.c'; then $(CYGPATH_W) 'extended-interface.c'; else $(CYGPATH_W) '$(srcdir)/extended-interface.c'; fi`
	mv -f $(DEPDIR)/xfmpc-extended-interface.Tpo $(DEPDIR)/xfmpc-extended-interface.Po
#	source='extended-interface.c' object='xfmpc-extended-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-extended-interface.obj `if test -f 'extended-interface.c'; then $(CYGPATH_W) 'extended-interface.c'; else $(CYGPATH_W) '$(srcdir)/extended-interface.c'; fi`

xfmpc-playlist.o: playlist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-playlist.o -MD -MP -MF $(DEPDIR)/xfmpc-playlist.Tpo -c -o xfmpc-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c
	mv -f $(DEPDIR)/xfmpc-playlist.Tpo $(DEPDIR)/xfmpc-playlist.Po
#	source='playlist.c' object='xfmpc-playlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c

xfmpc-playlist.obj: playlist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-playlist.obj -MD -MP -MF $(DEPDIR)/xfmpc-playlist.Tpo -c -o xfmpc-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`
	mv -f $(DEPDIR)/xfmpc-playlist.Tpo $(DEPDIR)/xfmpc-playlist.Po
#	source='playlist.c' object='xfmpc-playlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`

xfmpc-dbbrowser.o: dbbrowser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-dbbrowser.o -MD -MP -MF $(DEPDIR)/xfmpc-dbbrowser.Tpo -c -o xfmpc-dbbrowser.o `test -f 'dbbrowser.c' || echo '$(srcdir)/'`dbbrowser.c
	mv -f $(DEPDIR)/xfmpc-dbbrowser.Tpo $(DEPDIR)/xfmpc-dbbrowser.Po
#	source='dbbrowser.c' object='xfmpc-dbbrowser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-dbbrowser.o `test -f 'dbbrowser.c' || echo '$(srcdir)/'`dbbrowser.c

xfmpc-dbbrowser.obj: dbbrowser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-dbbrowser.obj -MD -MP -MF $(DEPDIR)/xfmpc-dbbrowser.Tpo -c -o xfmpc-dbbrowser.obj `if test -f 'dbbrowser.c'; then $(CYGPATH_W) 'dbbrowser.c'; else $(CYGPATH_W) '$(srcdir)/dbbrowser.c'; fi`
	mv -f $(DEPDIR)/xfmpc-dbbrowser.Tpo $(DEPDIR)/xfmpc-dbbrowser.Po
#	source='dbbrowser.c' object='xfmpc-dbbrowser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-dbbrowser.obj `if test -f 'dbbrowser.c'; then $(CYGPATH_W) 'dbbrowser.c'; else $(CYGPATH_W) '$(srcdir)/dbbrowser.c'; fi`

xfmpc-lists.o: lists.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-lists.o -MD -MP -MF $(DEPDIR)/xfmpc-lists.Tpo -c -o xfmpc-lists.o `test -f 'lists.c' || echo '$(srcdir)/'`lists.c
	mv -f $(DEPDIR)/xfmpc-lists.Tpo $(DEPDIR)/xfmpc-lists.Po
#	source='lists.c' object='xfmpc-lists.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-lists.o `test -f 'lists.c' || echo '$(srcdir)/'`lists.c

xfmpc-lists.obj: lists.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-lists.obj -MD -MP -MF $(DEPDIR)/xfmpc-lists.Tpo -c -o xfmpc-lists.obj `if test -f 'lists.c'; then $(CYGPATH_W) 'lists.c'; else $(CYGPATH_W) '$(srcdir)/lists.c'; fi`
	mv -f $(DEPDIR)/xfmpc-lists.Tpo $(DEPDIR)/xfmpc-lists.Po
#	source='lists.c' object='xfmpc-lists.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-lists.obj `if test -f 'lists.c'; then $(CYGPATH_W) 'lists.c'; else $(CYGPATH_W) '$(srcdir)/lists.c'; fi`

xfmpc-streams.o: streams.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-streams.o -MD -MP -MF $(DEPDIR)/xfmpc-streams.Tpo -c -o xfmpc-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c
	mv -f $(DEPDIR)/xfmpc-streams.Tpo $(DEPDIR)/xfmpc-streams.Po
#	source='streams.c' object='xfmpc-streams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

xfmpc-streams.obj: streams.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-streams.obj -MD -MP -MF $(DEPDIR)/xfmpc-streams.Tpo -c -o xfmpc-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`
	mv -f $(DEPDIR)/xfmpc-streams.Tpo $(DEPDIR)/xfmpc-streams.Po
#	source='streams.c' object='xfmpc-streams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

xfmpc-streams-dialog.o: streams-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-streams-dialog.o -MD -MP -MF $(DEPDIR)/xfmpc-streams-dialog.Tpo -c -o xfmpc-streams-dialog.o `test -f 'streams-dialog.c' || echo '$(srcdir)/'`streams-dialog.c
	mv -f $(DEPDIR)/xfmpc-streams-dialog.Tpo $(DEPDIR)/xfmpc-streams-dialog.Po
#	source='streams-dialog.c' object='xfmpc-streams-dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-streams-dialog.o `test -f 'streams-dialog.c' || echo '$(srcdir)/'`streams-dialog.c

xfmpc-streams-dialog.obj: streams-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-streams-dialog.obj -MD -MP -MF $(DEPDIR)/xfmpc-streams-dialog.Tpo -c -o xfmpc-streams-dialog.obj `if test -f 'streams-dialog.c'; then $(CYGPATH_W) 'streams-dialog.c'; else $(CYGPATH_W) '$(srcdir)/streams-dialog.c'; fi`
	mv -f $(DEPDIR)/xfmpc-streams-dialog.Tpo $(DEPDIR)/xfmpc-streams-dialog.Po
#	source='streams-dialog.c' object='xfmpc-streams-dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-streams-dialog.obj `if test -f 'streams-dialog.c'; then $(CYGPATH_W) 'streams-dialog.c'; else $(CYGPATH_W) '$(srcdir)/streams-dialog.c'; fi`

xfmpc-songinfo.o: songinfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-songinfo.o -MD -MP -MF $(DEPDIR)/xfmpc-songinfo.Tpo -c -o xfmpc-songinfo.o `test -f 'songinfo.c' || echo '$(srcdir)/'`songinfo.c
	mv -f $(DEPDIR)/xfmpc-songinfo.Tpo $(DEPDIR)/xfmpc-songinfo.Po
#	source='songinfo.c' object='xfmpc-songinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-songinfo.o `test -f 'songinfo.c' || echo '$(srcdir)/'`songinfo.c

xfmpc-songinfo.obj: songinfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-songinfo.obj -MD -MP -MF $(DEPDIR)/xfmpc-songinfo.Tpo -c -o xfmpc-songinfo.obj `if test -f 'songinfo.c'; then $(CYGPATH_W) 'songinfo.c'; else $(CYGPATH_W) '$(srcdir)/songinfo.c'; fi`
	mv -f $(DEPDIR)/xfmpc-songinfo.Tpo $(DEPDIR)/xfmpc-songinfo.Po
#	source='songinfo.c' object='xfmpc-songinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-songinfo.obj `if test -f 'songinfo.c'; then $(CYGPATH_W) 'songinfo.c'; else $(CYGPATH_W) '$(srcdir)/songinfo.c'; fi`

xfmpc-statusbar.o: statusbar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-statusbar.o -MD -MP -MF $(DEPDIR)/xfmpc-statusbar.Tpo -c -o xfmpc-statusbar.o `test -f 'statusbar.c' || echo '$(srcdir)/'`statusbar.c
	mv -f $(DEPDIR)/xfmpc-statusbar.Tpo $(DEPDIR)/xfmpc-statusbar.Po
#	source='statusbar.c' object='xfmpc-statusbar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-statusbar.o `test -f 'statusbar.c' || echo '$(srcdir)/'`statusbar.c

xfmpc-statusbar.obj: statusbar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-statusbar.obj -MD -MP -MF $(DEPDIR)/xfmpc-statusbar.Tpo -c -o xfmpc-statusbar.obj `if test -f 'statusbar.c'; then $(CYGPATH_W) 'statusbar.c'; else $(CYGPATH_W) '$(srcdir)/statusbar.c'; fi`
	mv -f $(DEPDIR)/xfmpc-statusbar.Tpo $(DEPDIR)/xfmpc-statusbar.Po
#	source='statusbar.c' object='xfmpc-statusbar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-statusbar.obj `if test -f 'statusbar.c'; then $(CYGPATH_W) 'statusbar.c'; else $(CYGPATH_W) '$(srcdir)/statusbar.c'; fi`

xfmpc-preferences.o: preferences.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-preferences.o -MD -MP -MF $(DEPDIR)/xfmpc-preferences.Tpo -c -o xfmpc-preferences.o `test -f 'preferences.c' || echo '$(srcdir)/'`preferences.c
	mv -f $(DEPDIR)/xfmpc-preferences.Tpo $(DEPDIR)/xfmpc-preferences.Po
#	source='preferences.c' object='xfmpc-preferences.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-preferences.o `test -f 'preferences.c' || echo '$(srcdir)/'`preferences.c

xfmpc-preferences.obj: preferences.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-preferences.obj -MD -MP -MF $(DEPDIR)/xfmpc-preferences.Tpo -c -o xfmpc-preferences.obj `if test -f 'preferences.c'; then $(CYGPATH_W) 'preferences.c'; else $(CYGPATH_W) '$(srcdir)/preferences.c'; fi`
	mv -f $(DEPDIR)/xfmpc-preferences.Tpo $(DEPDIR)/xfmpc-preferences.Po
#	source='preferences.c' object='xfmpc-preferences.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-preferences.obj `if test -f 'preferences.c'; then $(CYGPATH_W) 'preferences.c'; else $(CYGPATH_W) '$(srcdir)/preferences.c'; fi`

xfmpc-preferences-dialog.o: preferences-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-preferences-dialog.o -MD -MP -MF $(DEPDIR)/xfmpc-preferences-dialog.Tpo -c -o xfmpc-preferences-dialog.o `test -f 'preferences-dialog.c' || echo '$(srcdir)/'`preferences-dialog.c
	mv -f $(DEPDIR)/xfmpc-preferences-dialog.Tpo $(DEPDIR)/xfmpc-preferences-dialog.Po
#	source='preferences-dialog.c' object='xfmpc-preferences-dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-preferences-dialog.o `test -f 'preferences-dialog.c' || echo '$(srcdir)/'`preferences-dialog.c

xfmpc-preferences-dialog.obj: preferences-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-preferences-dialog.obj -MD -MP -MF $(DEPDIR)/xfmpc-preferences-dialog.Tpo -c -o xfmpc-preferences-dialog.obj `if test -f 'preferences-dialog.c'; then $(CYGPATH_W) 'preferences-dialog.c'; else $(CYGPATH_W) '$(srcdir)/preferences-dialog.c'; fi`
	mv -f $(DEPDIR)/xfmpc-preferences-dialog.Tpo $(DEPDIR)/xfmpc-preferences-dialog.Po
#	source='preferences-dialog.c' object='xfmpc-preferences-dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-preferences-dialog.obj `if test -f 'preferences-dialog.c'; then $(CYGPATH_W) 'preferences-dialog.c'; else $(CYGPATH_W) '$(srcdir)/preferences-dialog.c'; fi`

xfmpc-cover.o: cover.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-cover.o -MD -MP -MF $(DEPDIR)/xfmpc-cover.Tpo -c -o xfmpc-cover.o `test -f 'cover.c' || echo '$(srcdir)/'`cover.c
	mv -f $(DEPDIR)/xfmpc-cover.Tpo $(DEPDIR)/xfmpc-cover.Po
#	source='cover.c' object='xfmpc-cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-cover.o `test -f 'cover.c' || echo '$(srcdir)/'`cover.c

xfmpc-cover.obj: cover.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-cover.obj -MD -MP -MF $(DEPDIR)/xfmpc-cover.Tpo -c -o xfmpc-cover.obj `if test -f 'cover.c'; then $(CYGPATH_W) 'cover.c'; else $(CYGPATH_W) '$(srcdir)/cover.c'; fi`
	mv -f $(DEPDIR)/xfmpc-cover.Tpo $(DEPDIR)/xfmpc-cover.Po
#	source='cover.c' object='xfmpc-cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-cover.obj `if test -f 'cover.c'; then $(CYGPATH_W) 'cover.c'; else $(CYGPATH_W) '$(srcdir)/cover.c'; fi`

xfmpc-mpdclient.o: mpdclient.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-mpdclient.o -MD -MP -MF $(DEPDIR)/xfmpc-mpdclient.Tpo -c -o xfmpc-mpdclient.o `test -f 'mpdclient.c' || echo '$(srcdir)/'`mpdclient.c
	mv -f $(DEPDIR)/xfmpc-mpdclient.Tpo $(DEPDIR)/xfmpc-mpdclient.Po
#	source='mpdclient.c' object='xfmpc-mpdclient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-mpdclient.o `test -f 'mpdclient.c' || echo '$(srcdir)/'`mpdclient.c

xfmpc-mpdclient.obj: mpdclient.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-mpdclient.obj -MD -MP -MF $(DEPDIR)/xfmpc-mpdclient.Tpo -c -o xfmpc-mpdclient.obj `if test -f 'mpdclient.c'; then $(CYGPATH_W) 'mpdclient.c'; else $(CYGPATH_W) '$(srcdir)/mpdclient.c'; fi`
	mv -f $(DEPDIR)/xfmpc-mpdclient.Tpo $(DEPDIR)/xfmpc-mpdclient.Po
#	source='mpdclient.c' object='xfmpc-mpdclient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-mpdclient.obj `if test -f 'mpdclient.c'; then $(CYGPATH_W) 'mpdclient.c'; else $(CYGPATH_W) '$(srcdir)/mpdclient.c'; fi`

xfmpc-song-dialog.o: song-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-song-dialog.o -MD -MP -MF $(DEPDIR)/xfmpc-song-dialog.Tpo -c -o xfmpc-song-dialog.o `test -f 'song-dialog.c' || echo '$(srcdir)/'`song-dialog.c
	mv -f $(DEPDIR)/xfmpc-song-dialog.Tpo $(DEPDIR)/xfmpc-song-dialog.Po
#	source='song-dialog.c' object='xfmpc-song-dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-song-dialog.o `test -f 'song-dialog.c' || echo '$(srcdir)/'`song-dialog.c

xfmpc-song-dialog.obj: song-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-song-dialog.obj -MD -MP -MF $(DEPDIR)/xfmpc-song-dialog.Tpo -c -o xfmpc-song-dialog.obj `if test -f 'song-dialog.c'; then $(CYGPATH_W) 'song-dialog.c'; else $(CYGPATH_W) '$(srcdir)/song-dialog.c'; fi`
	mv -f $(DEPDIR)/xfmpc-song-dialog.Tpo $(DEPDIR)/xfmpc-song-dialog.Po
#	source='song-dialog.c' object='xfmpc-song-dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-song-dialog.obj `if test -f 'song-dialog.c'; then $(CYGPATH_W) 'song-dialog.c'; else $(CYGPATH_W) '$(srcdir)/song-dialog.c'; fi`

xfmpc-menu.o: menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-menu.o -MD -MP -MF $(DEPDIR)/xfmpc-menu.Tpo -c -o xfmpc-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c
	mv -f $(DEPDIR)/xfmpc-menu.Tpo $(DEPDIR)/xfmpc-menu.Po
#	source='menu.c' object='xfmpc-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c

xfmpc-menu.obj: menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-menu.obj -MD -MP -MF $(DEPDIR)/xfmpc-menu.Tpo -c -o xfmpc-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`
	mv -f $(DEPDIR)/xfmpc-menu.Tpo $(DEPDIR)/xfmpc-menu.Po
#	source='menu.c' object='xfmpc-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`

xfmpc-tray.o: tray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-tray.o -MD -MP -MF $(DEPDIR)/xfmpc-tray.Tpo -c -o xfmpc-tray.o `test -f 'tray.c' || echo '$(srcdir)/'`tray.c
	mv -f $(DEPDIR)/xfmpc-tray.Tpo $(DEPDIR)/xfmpc-tray.Po
#	source='tray.c' object='xfmpc-tray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-tray.o `test -f 'tray.c' || echo '$(srcdir)/'`tray.c

xfmpc-tray.obj: tray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-tray.obj -MD -MP -MF $(DEPDIR)/xfmpc-tray.Tpo -c -o xfmpc-tray.obj `if test -f 'tray.c'; then $(CYGPATH_W) 'tray.c'; else $(CYGPATH_W) '$(srcdir)/tray.c'; fi`
	mv -f $(DEPDIR)/xfmpc-tray.Tpo $(DEPDIR)/xfmpc-tray.Po
#	source='tray.c' object='xfmpc-tray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-tray.obj `if test -f 'tray.c'; then $(CYGPATH_W) 'tray.c'; else $(CYGPATH_W) '$(srcdir)/tray.c'; fi`

xfmpc-lastfm.o: lastfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-lastfm.o -MD -MP -MF $(DEPDIR)/xfmpc-lastfm.Tpo -c -o xfmpc-lastfm.o `test -f 'lastfm.c' || echo '$(srcdir)/'`lastfm.c
	mv -f $(DEPDIR)/xfmpc-lastfm.Tpo $(DEPDIR)/xfmpc-lastfm.Po
#	source='lastfm.c' object='xfmpc-lastfm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-lastfm.o `test -f 'lastfm.c' || echo '$(srcdir)/'`lastfm.c

xfmpc-lastfm.obj: lastfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-lastfm.obj -MD -MP -MF $(DEPDIR)/xfmpc-lastfm.Tpo -c -o xfmpc-lastfm.obj `if test -f 'lastfm.c'; then $(CYGPATH_W) 'lastfm.c'; else $(CYGPATH_W) '$(srcdir)/lastfm.c'; fi`
	mv -f $(DEPDIR)/xfmpc-lastfm.Tpo $(DEPDIR)/xfmpc-lastfm.Po
#	source='lastfm.c' object='xfmpc-lastfm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-lastfm.obj `if test -f 'lastfm.c'; then $(CYGPATH_W) 'lastfm.c'; else $(CYGPATH_W) '$(srcdir)/lastfm.c'; fi`

xfmpc-etc.o: etc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-etc.o -MD -MP -MF $(DEPDIR)/xfmpc-etc.Tpo -c -o xfmpc-etc.o `test -f 'etc.c' || echo '$(srcdir)/'`etc.c
	mv -f $(DEPDIR)/xfmpc-etc.Tpo $(DEPDIR)/xfmpc-etc.Po
#	source='etc.c' object='xfmpc-etc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-etc.o `test -f 'etc.c' || echo '$(srcdir)/'`etc.c

xfmpc-etc.obj: etc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-etc.obj -MD -MP -MF $(DEPDIR)/xfmpc-etc.Tpo -c -o xfmpc-etc.obj `if test -f 'etc.c'; then $(CYGPATH_W) 'etc.c'; else $(CYGPATH_W) '$(srcdir)/etc.c'; fi`
	mv -f $(DEPDIR)/xfmpc-etc.Tpo $(DEPDIR)/xfmpc-etc.Po
#	source='etc.c' object='xfmpc-etc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-etc.obj `if test -f 'etc.c'; then $(CYGPATH_W) 'etc.c'; else $(CYGPATH_W) '$(srcdir)/etc.c'; fi`

xfmpc-xfce-arrow-button.o: xfce-arrow-button.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-xfce-arrow-button.o -MD -MP -MF $(DEPDIR)/xfmpc-xfce-arrow-button.Tpo -c -o xfmpc-xfce-arrow-button.o `test -f 'xfce-arrow-button.c' || echo '$(srcdir)/'`xfce-arrow-button.c
	mv -f $(DEPDIR)/xfmpc-xfce-arrow-button.Tpo $(DEPDIR)/xfmpc-xfce-arrow-button.Po
#	source='xfce-arrow-button.c' object='xfmpc-xfce-arrow-button.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-xfce-arrow-button.o `test -f 'xfce-arrow-button.c' || echo '$(srcdir)/'`xfce-arrow-button.c

xfmpc-xfce-arrow-button.obj: xfce-arrow-button.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -MT xfmpc-xfce-arrow-button.obj -MD -MP -MF $(DEPDIR)/xfmpc-xfce-arrow-button.Tpo -c -o xfmpc-xfce-arrow-button.obj `if test -f 'xfce-arrow-button.c'; then $(CYGPATH_W) 'xfce-arrow-button.c'; else $(CYGPATH_W) '$(srcdir)/xfce-arrow-button.c'; fi`
	mv -f $(DEPDIR)/xfmpc-xfce-arrow-button.Tpo $(DEPDIR)/xfmpc-xfce-arrow-button.Po
#	source='xfce-arrow-button.c' object='xfmpc-xfce-arrow-button.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfmpc_CFLAGS) $(CFLAGS) -c -o xfmpc-xfce-arrow-button.obj `if test -f 'xfce-arrow-button.c'; then $(CYGPATH_W) 'xfce-arrow-button.c'; else $(CYGPATH_W) '$(srcdir)/xfce-arrow-button.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


#main-ui.h: Makefile $(srcdir)/main-ui.xml
#	exo-csource --strip-comments --strip-content --static --name=main_ui $(srcdir)/main-ui.xml > main-ui.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
